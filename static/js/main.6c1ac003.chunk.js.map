{"version":3,"sources":["logo.svg","Task.js","TaskList.js","Bottom.js","App.js","reportWebVitals.js","inCloudApp.js","index.js"],"names":["Task","props","edit","editState","show","toDelete","useState","task","editInput","setEditInput","priority","console","log","id","className","completed","toString","type","name","value","checked","onChange","e","handleTaskFieldChanged","target","htmlFor","event","handleConfEdit2","onClick","handleEditClick","handleConfEdit","TaskList","taskToBeEdit","setTaskToBeEdit","text","priorityNum","tasks","length","listTasks","map","t","includes","showCompletedTask","taskID","Bottom","taskNameInput","setTaskNameInput","taskPriorityInput","setTaskPriorityInput","onCreateClick","handleTaskAdded","handleHideCompleted","handleTasksDeleted","maxMessage","App","loading","onTaskAdded","sortVal","setSort","sortPriority","sortDirection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","collectionName","InCloudApp","setSortVal","setSortPriority","setSortDirection","orderNum","setOrderNum","query","collection","orderBy","useCollection","setShowCompletedTask","setToDelete","setMaxMessage","docs","doc","data","newId","generateUniqueID","set","place_order","taskId","field","update","completedIDs","retArr","i","push","getCompleted","delete","sortPref","ReactDOM","render","StrictMode","initialData","document","getElementById"],"mappings":"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","file":"static/js/main.6c1ac003.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import App from \"./App\";\nimport './Task.css';\nimport {useState} from \"react\";\n\n\n\nfunction Task(props){\n    const edit = props.editState;\n    const show = props.show;\n    const toDelete = props.toDelete;\n    const[editInput, setEditInput] = useState(props.task);\n    const[editPriority, setEditPriority] = useState(props.priority);\n\n    console.log(editInput)\n\n    function handleConfEdit3(id,priorityNum){\n        setEditPriority(priorityNum);\n        props.handleConfEdit2(id,editPriority);\n    }\n\n    if(edit === 0){\n        return <div id={props.id} className={\"comp\"+props.completed.toString()+\"show\"+show.toString()}>\n            <input type=\"checkbox\" id={props.id}\n                   name={props.task}\n                   value={props.task}\n                   checked={props.completed && !toDelete}\n                   onChange={(e)=>props.handleTaskFieldChanged(e.target.id, \"completed\", e.target.checked)}/>\n            <label htmlFor={props.task} className=\"taskLabel\"> {props.task} </label>\n            <select name=\"priorityLvl\" id=\"priorityLvl\" value={props.priority}\n                    onChange={(event)=>props.handleConfEdit2(props.id,event.target.value)}>\n                <option value=\"0\"></option>\n                <option value=\"1\">!</option>\n                <option value=\"2\">!!</option>\n                <option value=\"3\">!!!</option>\n            </select>\n            <button type=\"button\" id={\"ed\"+props.id}\n                    onClick={(e)=>props.handleEditClick(e.target.id)} className=\"edit\">\n                edit </button>\n        </div>\n    }\n    else if(edit === 1){\n        return <div id={props.id} className={\"comp\"+props.completed.toString()+\"show\"+show.toString()}>\n            <input type=\"checkbox\" id={props.id}\n                   name={props.task}\n                   value={props.task}\n                   checked={props.completed}/>\n            <input  type = \"text\" id = \"newTask\" name=\"newTask\" value={editInput}\n                    onChange={(event)=>setEditInput(event.target.value)} />\n            <button type=\"button\" id={props.id} onClick={(e)=>props.handleConfEdit(e.target.id,editInput)}\n                    className=\"edit\"> confirm edit </button>\n        </div>\n    }\n\n    else{\n        return <div id={props.id} className={\"comp\"+props.completed.toString()+\"show\"+show.toString()}>\n            <input type=\"checkbox\" id={props.id}\n                   name={props.task}\n                   value={props.task}\n                   checked={props.completed}/>\n            <label htmlFor={props.task}> {props.task} </label>\n        </div>\n    }\n\n}\n\nexport default Task;","import Task from './Task.js'\nimport App from \"./App\";\nimport {useState} from \"react\";\nimport './TaskList.css';\n\nfunction TaskList(props){\n    const[taskToBeEdit, setTaskToBeEdit] = useState(-1);\n\n    function handleConfEdit(id,text){\n        setTaskToBeEdit(-1);\n        props.handleTaskFieldChanged(id,\"task\",text);\n    }\n    function handleConfEdit2(id,priorityNum){\n        props.handleTaskFieldChanged(id,\"priority\",priorityNum);\n    }\n\n    if (props.tasks.length === 0){\n        return <div> Nothing to do!</div>\n    }\n    else{\n        if(taskToBeEdit !== -1){\n            const listTasks = props.tasks.map((t) =>\n            {if (taskToBeEdit.includes(t.id)) {\n                return <Task className=\"task\"\n                            handleTaskFieldChanged={props.handleTaskFieldChanged}\n                             id={t.id} task={t.task} completed={t.completed} priority={t.priority}\n                             editState={1} show={props.showCompletedTask}\n                            handleConfEdit={handleConfEdit}/>;\n                }\n            else {\n                return <Task handleTaskFieldChanged={props.handleTaskFieldChanged} id={t.id} task={t.task} completed={t.completed}\n                             priority={t.priority}\n                             editState={2} show={props.showCompletedTask}/>;\n                }\n            })\n            return <div id={\"TaskList\"}> {listTasks} </div>\n        }\n\n        else{\n            const listTasks = props.tasks.map((t) =>\n                <Task handleTaskFieldChanged={props.handleTaskFieldChanged}\n                      handleEditClick={(taskID)=>setTaskToBeEdit(taskID)}\n                      id={t.id} task={t.task} completed={t.completed} priority={t.priority}\n                      editState={0} show={props.showCompletedTask} toDelete={props.toDelete}\n                      handleConfEdit2={handleConfEdit2}/>);\n            return <div id={\"TaskList\"}> {listTasks} </div>\n        }\n\n    }\n}\nexport default TaskList;\n\n","import App from \"./App\";\nimport './Bottom.css';\nimport {useState} from \"react\";\n\nfunction Bottom(props){\n    const[taskNameInput, setTaskNameInput] = useState(\"\");\n    const[taskPriorityInput, setTaskPriorityInput] = useState(\"0\");\n\n\n\n    function onCreateClick(){\n        props.handleTaskAdded(taskNameInput,taskPriorityInput);\n        setTaskNameInput(\"\");\n        setTaskPriorityInput(\"0\");\n    }\n\n\n\n    if (props.showCompletedTask){\n        return <div className=\"bottom\">\n            New task:<br/>\n            <input  type = \"text\" id = \"newTask\" name=\"newTask\"\n                    onChange={(event)=>setTaskNameInput(event.target.value)}\n                    value={taskNameInput}/>\n\n\n            <select name=\"priorityLvl\" id=\"priorityLvl\"\n                    onChange={(event)=>setTaskPriorityInput(event.target.value)}>\n                <option value=\"0\">Select priority</option>\n                <option value=\"0\">None</option>\n                <option value=\"1\">Low</option>\n                <option value=\"2\">Medium</option>\n                <option value=\"3\">High</option>\n            </select>\n\n            <button type=\"button\" id=\"create\" onClick={(e)=> onCreateClick()}>\n                Create Task\n            </button> <br/>\n\n            <button type=\"button\" id=\"hide\" onClick={(e)=>props.handleHideCompleted()} >\n                Hide Completed Tasks\n            </button>\n\n            <button type=\"button\" id=\"clear\" onClick={(e) => props.handleTasksDeleted()} >\n                Clear Completed Tasks\n            </button>\n\n            <p>{props.maxMessage}</p>\n\n        </div>\n    }\n    else{\n        return <div className=\"bottom\">\n            New task:<br/>\n            <input  type = \"text\" id = \"newTask\" name=\"newTask\"\n                    onChange={(event)=>setTaskNameInput(event.target.value)} value={taskNameInput}/>\n\n            <select name=\"priorityLvl\" id=\"priorityLvl\"\n                    onChange={(event)=>setTaskPriorityInput(event.target.value)}>\n                <option value=\"0\">Select priority</option>\n                <option value=\"1\">Low</option>\n                <option value=\"2\">Medium</option>\n                <option value=\"3\">High</option>\n                <option value=\"0\">None</option>\n                <option value=\"1\">Low</option>\n                <option value=\"2\">Medium</option>\n                <option value=\"3\">High</option>\n            </select>\n            <button type=\"button\" id=\"create\" onClick={(e)=>onCreateClick()}> Create Task </button> <br/>\n            <button type=\"button\" id=\"show\" onClick={(e)=>props.handleHideCompleted()} >\n                Show Completed Tasks\n            </button>\n            <button type=\"button\" id=\"clear\" onClick={(e) => props.handleTasksDeleted()} >\n                Clear Completed Tasks </button>\n        </div>\n    }\n\n}\n\n\nexport default Bottom;","import logo from './logo.svg';\nimport './App.css';\nimport {useState} from \"react\";\nimport TaskList from './TaskList.js';\nimport Bottom from './Bottom.js';\nimport {useDocument} from \"react-firebase-hooks/firestore\";\n\n\nfunction App(props) {\n\n    if(props.tasks.length===0){\n        return (<div className=\"App\">\n            {props.loading && <h1>Loading</h1>}\n            <h1>List of Things to Do</h1>\n            <p>Nothing to do!</p>\n            <Bottom onTaskAdded={props.onTaskAdded} showCompletedTask={true}\n                    handleTaskAdded={props.handleTaskAdded}/>\n        </div>);\n    } else{\n        return(<div className=\"App\">\n            {props.loading && <h1>Loading</h1>}\n            <h1>List of Things to Do</h1>\n            <label htmlFor=\"sortWithSelect\">Sort by:</label>\n            <select name=\"sortWithSelect\" id=\"sortWithSelect\" value={props.sortVal}\n                    onChange={(event)=>props.setSort(event.target.value)}>\n                <option value=\"default\">default</option>\n                <option value=\"priorityAsc\">Lowest to Highest priority</option>\n                <option value=\"priorityDesc\">Highest to lowest priority</option>\n            </select>\n            <TaskList handleTaskFieldChanged={props.handleTaskFieldChanged}\n                  tasks={props.tasks} showCompletedTask={props.showCompletedTask}\n                      setSort={props.setSort}\n                      sortPriority={props.sortPriority}\n                      sortDirection={props.sortDirection}\n                      toDelete={props.toDelete}/> <br/>\n            <Bottom onTaskAdded={props.onTaskAdded}\n                    showCompletedTask={props.showCompletedTask}\n                    handleTaskAdded={props.handleTaskAdded}\n                    handleHideCompleted={props.handleHideCompleted}\n                    handleTaskFieldChanged={props.handleTaskFieldChanged}\n                    handleTasksDeleted={props.handleTasksDeleted}\n                    maxMessage={props.maxMessage}/>\n        </div>);\n    }\n}\n\nexport default App;\n\n/*handleConfEdit={props.handleConfEdit}*/\n\n/*handleTaskAdded={props.handleTaskAdded}*/\n\n/*<TaskList /*handleCheckChange={props.handleCheckChange} handleConfEdit={props.handleConfEdit}\n                  data={props.data} showCompletedTask={props.showCompletedTask}/> <br/>\n        <Bottom onItemDeleted={props.onItemDeleted} onItemAdded={props.onItemAdded}\n                handleHideCompleted={props.handleHideCompleted} showCompletedTask={props.showCompletedTask}/>*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import App from './App.js';\nimport {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n    authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n    projectId: \"hmc-cs124-fa21-labs\",\n    storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n    messagingSenderId: \"949410042946\",\n    appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nconst collectionName = \"acowe-tasks\"\n\n\nfunction InCloudApp(props) {\n    const [sortVal, setSortVal] = useState(\"default\");\n    const [sortPriority, setSortPriority] = useState(\"place_order\");\n    const [sortDirection, setSortDirection] = useState('asc');\n    const [orderNum, setOrderNum] = useState(0);\n    const query = db.collection(collectionName).orderBy(sortPriority,sortDirection)\n    const [value, loading, error] = useCollection(query);\n    const [showCompletedTask, setShowCompletedTask]=useState(true);\n    const [toDelete, setToDelete]=useState(false);\n    const [maxMessage, setMaxMessage] = useState(\"\");\n\n    function setSort(sortPref) {\n        setSortVal(sortPref);\n        if (sortPref === \"priorityAsc\"){\n            setSortPriority(\"priority\");\n            setSortDirection(\"asc\");\n        }\n        else if (sortPref === \"priorityDesc\"){\n            setSortPriority(\"priority\");\n            setSortDirection(\"desc\");\n        }\n        else{\n            setSortPriority(\"place_order\");\n            setSortDirection(\"desc\");\n        }\n\n    }\n\n    let tasks = [];\n    if (value) {\n        tasks = value.docs.map((doc) => {\n            return {...doc.data()}});\n    }\n\n    console.log(tasks)\n\n    function handleTaskFieldChanged(taskId, field, value) {\n        db.collection(collectionName).doc(taskId).update(\n            {[field]:value}\n        );\n    }\n\n    function handleTaskAdded(text, priorityNum){\n        if(tasks.length < 10){\n            setMaxMessage(\"\");\n            const newId = generateUniqueID();\n            setOrderNum(orderNum + 1);\n            db.collection(collectionName).doc(newId).set({\n                id: newId,\n                task: text,\n                completed: false,\n                priority: priorityNum,\n                place_order: orderNum,\n            })\n\n        }\n        else if (tasks.length = 10){\n            setMaxMessage(\"Max number of tasks reached! (You should\" +\n                \" take care of some of the stuff on the list first! :) )\");\n        }\n    }\n\n    function getCompleted(){\n        let retArr = [];\n        for (let i=0; i< tasks.length;i++){\n            if(tasks[i].completed){\n                retArr.push(tasks[i].id);\n            }\n        }\n        return retArr;\n    }\n\n    function handleTasksDeleted(){\n        const completedIDs =getCompleted();\n        setToDelete(true);\n        for(let i=0; i< completedIDs.length;i++){\n            db.collection(collectionName).doc(completedIDs[i]).delete();\n        }\n        setToDelete(false);\n    }\n\n\n    return <div>\n        <App loading={loading} tasks={tasks}\n             showCompletedTask={showCompletedTask}\n             handleHideCompleted={()=>setShowCompletedTask(!showCompletedTask)}\n             handleTaskAdded={handleTaskAdded}\n             handleTaskFieldChanged={handleTaskFieldChanged}\n        handleTasksDeleted={handleTasksDeleted}\n             setSort={setSort}\n             sortVal={sortVal}\n             toDelete={toDelete}\n             maxMessage={maxMessage}/>\n    </div>\n}\n\n\n/*setData(setDataHelper(id,check))*/\nexport default InCloudApp;\n\n\n/*onItemDeleted={handleItemsDeleted} onItemAdded={(text)=>handleItemAdded(text)}\n\n            else return task;}))} data={data}\n        handleConfEdit={(id,editText)=>setData([...data].map(task =>{\n            if(id.includes(task.id)) {\n                return {\n                    ...task,\n                    name: editText\n                }\n            }\n            else return task;}))}\n             showCompletedTask={showCompletedTask}\n             handleHideCompleted={()=>setShowCompletedTask(!showCompletedTask)}*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport InCloudApp from \"./inCloudApp\";\nconst initialData = [{id: 52, name:\"call mom\", completed:false},{id: 53, name:\"eat Book\", completed:false},\n                     {id: 54, name:\"order lunch\", completed:false}];\n\nReactDOM.render(\n  <React.StrictMode>\n    <InCloudApp initialData={initialData}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}