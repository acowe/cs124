{"version":3,"sources":["Task.js","TaskList.js","Top.js","Bottom.js","App.js","reportWebVitals.js","InCloudApp.js","Tab.js","TabList.js","UnAuthApp.js","index.js"],"names":["Task","props","edit","editState","show","toDelete","useState","task_name","editInput","setEditInput","id","task_id","className","completed","toString","type","name","value","checked","onChange","e","handleTaskFieldChanged","target","htmlFor","priority","event","handleConfEdit2","onClick","handleEditClick","onKeyPress","key","handleConfEdit","TaskList","taskToBeEdit","setTaskToBeEdit","text","priorityNum","tasks","length","listTasks","map","t","includes","showCompletedTask","taskID","Top","currentList","setTaskListInput","showSort","initial","console","log","selectList","taskLists","l","list_id","list_name","listId","handleTaskListSelect","sharedWith","sortVal","setSort","Bottom","listNameInput","setListNameInput","taskNameInput","setTaskNameInput","taskPriorityInput","setTaskPriorityInput","listShareInput","setListShareInput","showTaskStuff","isOwner","onCreateListClick","handleTaskListAdded","role","onCreateTaskClick","handleTaskAdded","onShareListClick","handleTaskListShared","onUnShareListClick","handleTaskListUnShared","onShareListEnter","onCreateTaskEnter","handleHideCompleted","handleTasksDeleted","handleTaskListDeleted","App","loading","sortPriority","sortDirection","deleteAllTasks","currentListSharedWith","s","taskCount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","InCloudApp","collectionName","query","collection","where","user","email","useCollection","setCurrentList","setCurrentListSharedWith","setIsOwner","setSortVal","setSortPriority","setSortDirection","query_2","doc","orderBy","task_value","task_loading","setShowCompletedTask","setToDelete","maxMessage","setMaxMessage","orderNum","setOrderNum","sharedListSelect","list","user_email","get","querySnapshot","forEach","data","listID","delete","docs","taskLoading","listNameText","newListId","generateUniqueID","set","owner","uid","catch","error","newOwner","update","concat","removedOwner","filter","newTaskId","place_order","taskId","field","listToBeDeleted","completedIDs","retArr","i","push","getCompleted","sortPref","Tab","classNames","activeTab","label","join","onClickTab","TabList","children","setActiveTab","child","find","auth","googleProvider","GoogleAuthProvider","SignIn","useSignInWithEmailAndPassword","signInWithEmailAndPassword","userCredential","emailText","setEmailText","passText","setPassText","message","signInWithPopup","SignUp","useCreateUserWithEmailAndPassword","createUserWithEmailAndPassword","UnAuthApp","useAuthState","displayName","signOut","emailVerified","currentUser","sendEmailVerification","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4UAgEeA,MA1Df,SAAcC,GACV,IAAMC,EAAOD,EAAME,UACbC,EAAOH,EAAMG,KACbC,EAAWJ,EAAMI,SACvB,EAAiCC,mBAASL,EAAMM,WAAhD,mBAAMC,EAAN,KAAiBC,EAAjB,KAEA,OAAY,IAATP,EACQ,sBAAKQ,GAAI,OAAOT,EAAMU,QAASC,UAAW,OAAOX,EAAMY,UAAUC,WAAW,OAAOV,EAAKU,WAAxF,UACH,uBAAOC,KAAK,WAAWL,GAAIT,EAAMU,QAC1BK,KAAM,KAAKf,EAAMM,UACjB,aAAY,gBAAkBN,EAAMM,UACpCU,MAAOhB,EAAMM,UACbW,QAASjB,EAAMY,YAAcR,EAC7Bc,SAAU,SAACC,GAAD,OAAKnB,EAAMoB,uBAAuBD,EAAEE,OAAOZ,GAAI,YAAaU,EAAEE,OAAOJ,YACtF,wBAAOK,QAAStB,EAAMM,UAAW,aAAYN,EAAMM,UAAY,eAAiBN,EAAMY,UAAUC,WACzFF,UAAU,YADjB,cAC+BX,EAAMM,UADrC,OAEA,yBAAQS,KAAK,cAAcN,GAAG,cAAcO,MAAOhB,EAAMuB,SACjD,aAAa,6BACbL,SAAU,SAACM,GAAD,OAASxB,EAAMyB,gBAAgBzB,EAAMU,QAAQc,EAAMH,OAAOL,QAF5E,UAGI,wBAAQA,MAAM,MACd,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,gBACA,wBAAQA,MAAM,IAAd,oBAEJ,wBAAQF,KAAK,SAASL,GAAI,KAAKT,EAAMU,QAC7B,aAAW,YACXgB,QAAS,SAACP,GAAD,OAAKnB,EAAM2B,gBAAgBR,EAAEE,OAAOZ,KAAKE,UAAU,OAFpE,sBAMS,IAATV,EACG,sBAAKQ,GAAI,OAAOT,EAAMU,QAASC,UAAW,OAAOX,EAAMY,UAAUC,WAAW,OAAOV,EAAKU,WAAxF,UACH,uBAAOC,KAAK,WAAWL,GAAIT,EAAMU,QAC1BK,KAAMf,EAAMM,UACZU,MAAOhB,EAAMM,UACbW,QAASjB,EAAMY,YACtB,uBAAQE,KAAO,OAAOL,GAAK,UAAUM,KAAK,UAAUC,MAAOT,EACnDW,SAAU,SAACM,GAAD,OAAShB,EAAagB,EAAMH,OAAOL,QAC7CY,WAAY,SAACT,GACA,UAATA,EAAEU,KAAe7B,EAAM8B,eAAe9B,EAAMU,QAAQH,MAChE,wBAAQO,KAAK,SAASL,GAAIT,EAAMU,QAASgB,QAAS,SAACP,GAAD,OAAKnB,EAAM8B,eAAeX,EAAEE,OAAOZ,GAAGF,IAChFI,UAAU,OADlB,+BAMG,sBAAKF,GAAIT,EAAMU,QAASC,UAAW,OAAOX,EAAMY,UAAUC,WAAW,OAAOV,EAAKU,WAAjF,UACH,uBAAOC,KAAK,WAAWL,GAAIT,EAAMU,QAC1BK,KAAM,KAAKf,EAAMM,UACjBU,MAAOhB,EAAMM,UACbW,QAASjB,EAAMY,YACtB,wBAAOU,QAAStB,EAAMM,UAAtB,cAAmCN,EAAMM,UAAzC,W,MCAGyB,MApDf,SAAkB/B,GACd,MAAuCK,oBAAU,GAAjD,mBAAM2B,EAAN,KAAoBC,EAApB,KAGA,SAASH,EAAerB,EAAGyB,GACvBD,GAAiB,GACjBjC,EAAMoB,uBAAuBX,EAAG,YAAYyB,GAGhD,SAAST,EAAgBhB,EAAG0B,GACxBnC,EAAMoB,uBAAuBX,EAAG,WAAW0B,GAI/C,GAA2B,IAAvBnC,EAAMoC,MAAMC,OACZ,OAAO,kDAGP,IAAqB,IAAlBL,EAAoB,CAEnB,IAAMM,EAAYtC,EAAMoC,MAAMG,KAAI,SAACC,GAClC,OAAIR,EAAaS,SAASD,EAAE9B,SAClB,cAAC,EAAD,CAAMC,UAAU,OACVS,uBAAwBpB,EAAMoB,uBAC9BV,QAAS8B,EAAE9B,QAASJ,UAAWkC,EAAElC,UAAWM,UAAW4B,EAAE5B,UAAWW,SAAUiB,EAAEjB,SAChFrB,UAAW,EAAGC,KAAMH,EAAM0C,kBAC1BZ,eAAgBA,IAGtB,cAAC,EAAD,CAAMV,uBAAwBpB,EAAMoB,uBAAwBV,QAAS8B,EAAE9B,QACjEJ,UAAWkC,EAAElC,UACbM,UAAW4B,EAAE5B,UACbW,SAAUiB,EAAEjB,SACZrB,UAAW,EAAGC,KAAMH,EAAM0C,uBAG3C,OAAO,sBAAKjC,GAAI,WAAT,cAAuB6B,EAAvB,OAIP,IAAMA,EAAYtC,EAAMoC,MAAMG,KAAI,SAACC,GAAD,OAC9B,cAAC,EAAD,CAAMpB,uBAAwBpB,EAAMoB,uBAE9BV,QAAS8B,EAAE9B,QAASJ,UAAWkC,EAAElC,UAAWM,UAAW4B,EAAE5B,UAAWW,SAAUiB,EAAEjB,SAChFrB,UAAW,EAAGC,KAAMH,EAAM0C,kBAAmBtC,SAAUJ,EAAMI,SAC7DuB,gBAAiB,SAACgB,GAAD,OAAUV,EAAgBU,IAC3ClB,gBAAiBA,OAC3B,OAAO,sBAAKhB,GAAI,WAAT,cAAuB6B,EAAvB,Q,MCJJM,MA3Cf,SAAa5C,GACT,MAAyCK,mBAASL,EAAM6C,aAAxD,mBAAqBC,GAArB,WACMC,GAAa/C,EAAMgD,QAEzBC,QAAQC,IAAI,WAAaH,EAASlC,YAElC,IAAMsC,EAAanD,EAAMoD,UAAUb,KAAI,SAACc,GACpC,OAAO,yBAAQrC,MAAOqC,EAAEC,QAAjB,cAA4BD,EAAEE,gBASzC,OAAO,sBAAK5C,UAAU,MAAf,UACH,uBAAMA,UAAU,gBACV,aAAW,sBADjB,UAEA,uBAAOW,QAAQ,aAAf,oBACA,yBAAQP,KAAK,aACLN,GAAG,aAAaO,MAAOhB,EAAM6C,YAC7B,aAAa,sBACb3B,SAAU,SAACM,GAAD,OAbKgC,EAawBhC,EAAMH,OAAOL,MAZ5DhB,EAAMyD,qBAAqBD,QAC3BV,EAAiBU,GAFrB,IAA2BA,GAUvB,UAII,wBAAQxC,MAAO,MAAf,2BACCmC,QAGL,uBACA,sBAAMxC,UAAU,iBAAhB,SAAkCX,EAAM0D,aAAkB,uBAC1D,sBAAK/C,UAAW,WAAaoC,EAASlC,WAAtC,UACI,uBAAOS,QAAQ,iBAAiB,aAAa,eAA7C,sBACA,yBAAQP,KAAK,iBAAiB,aAAa,eAAeN,GAAG,iBAAiBO,MAAOhB,EAAM2D,QACnFzC,SAAU,SAACM,GAAD,OAASxB,EAAM4D,QAAQpC,EAAMH,OAAOL,QADtD,UAEI,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,cAAd,wCACA,wBAAQA,MAAM,eAAd,kD,MCsID6C,MA3Kf,SAAgB7D,GACZ,MAAyCK,mBAAS,IAAlD,mBAAMyD,EAAN,KAAqBC,EAArB,KACA,EAAyC1D,mBAAS,IAAlD,mBAAM2D,EAAN,KAAqBC,EAArB,KACA,EAAiD5D,mBAAS,KAA1D,mBAAM6D,EAAN,KAAyBC,EAAzB,KACA,EAA2C9D,mBAAS,IAApD,mBAAM+D,EAAN,KAAsBC,EAAtB,KACMC,GAAkBtE,EAAMgD,QACxBuB,EAAUvE,EAAMuE,QAGtB,SAASC,IAGL,OAFAxE,EAAMyE,oBAAoBX,GAC1BC,EAAiB,IACI,KAAlBD,EACQ,mBAAGrD,GAAG,iBAAiBiE,KAAK,QAA5B,iEAKA,oBAAGjE,GAAG,iBAAiBiE,KAAK,QAA5B,kBACGZ,EADH,0BAOf,SAASa,IACL3E,EAAM4E,gBAAgBZ,EAAcE,GACpCD,EAAiB,IACjBE,EAAqB,KAUzB,SAASU,IACL7E,EAAM8E,qBAAqBV,GAC3BC,EAAkB,IAEtB,SAASU,IACL/E,EAAMgF,uBAAuBZ,GAC7BC,EAAkB,IAGtB,SAASY,EAAiBpD,GACV,UAARA,IACA7B,EAAM8E,qBAAqBV,GAC3BC,EAAkB,KAI1B,SAASa,EAAkBrD,GACX,UAARA,IACA7B,EAAM4E,gBAAgBZ,EAAcE,GACpCD,EAAiB,IACjBE,EAAqB,MAK7B,OAAInE,EAAM0C,kBACC,sBAAK/B,UAAU,SAAf,UACH,sBAAKA,UAAW,WAAa2D,EAAczD,WAA3C,UACI,uBAAOS,QAAQ,UAAf,wBAA2C,uBAC3C,uBAAQR,KAAO,OAAOL,GAAK,UAAUM,KAAK,UAClC,aAAa,8BACba,WAAY,SAACT,GAAD,OAAK+D,EAAkB/D,EAAEU,MACrCX,SAAU,SAACM,GAAD,OAASyC,EAAiBzC,EAAMH,OAAOL,QACjDA,MAAOgD,IAGf,yBAAQjD,KAAK,cAAcN,GAAG,cAAc,aAAa,4BACjDS,SAAU,SAACM,GAAD,OAAS2C,EAAqB3C,EAAMH,OAAOL,QAD7D,UAEI,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,IAAd,kBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,oBACA,wBAAQA,MAAM,IAAd,qBAGJ,wBAAQF,KAAK,SAASL,GAAG,aAAaiB,QAAS,SAACP,GAAD,OAAMwD,KAArD,yBAlBJ,IAoBc,uBAEV,wBAAQ7D,KAAK,SAASL,GAAG,OAAOiB,QAAS,SAACP,GAAD,OAAKnB,EAAMmF,uBAApD,kCAIA,wBAAQrE,KAAK,SAASL,GAAG,QAAQiB,QAAS,SAACP,GAAD,OAAOnB,EAAMoF,sBAAvD,mCA1BJ,IA4Bc,0BA7BX,YAgCM,uBACT,uBAAQtE,KAAO,OAAOL,GAAK,UAAUM,KAAK,UAClC,aAAW,8BACXa,WAAY,SAACT,GAnEb,UAmEoCA,EAAEU,MAlE9C7B,EAAMyE,oBAAoBX,GAC1BC,EAAiB,MAkET7C,SAAU,SAACM,GAAD,OAASuC,EAAiBvC,EAAMH,OAAOL,QAAQA,MAAO8C,IACxE,wBAAQhD,KAAK,SAASL,GAAG,aAAaiB,QAAS,SAACP,GAAD,OAAKqD,KAApD,2BArCG,IAqC6F,uBAChG,uBAAOlD,QAAQ,YAAYX,UAAW,WAAa2D,EAAczD,WAAW,UAAY0D,EAAQ1D,WAAhG,6CAtCG,IAsCiJ,uBACpJ,uBAAQC,KAAO,OAAOH,UAAW,WAAa2D,EAAczD,WAAW,UAAY0D,EAAQ1D,WAAYJ,GAAK,YAAYM,KAAK,YACrHG,SAAU,SAACM,GAAD,OAAS6C,EAAkB7C,EAAMH,OAAOL,QAClDY,WAAY,SAACT,GAAK8D,EAAiB9D,EAAEU,MACrCb,MAAOoD,IACf,wBAAQtD,KAAK,SAASH,UAAW,WAAa2D,EAAczD,WAAY,UAAY0D,EAAQ1D,WAAYJ,GAAG,YACnGiB,QAAS,SAACP,GAAD,OAAK0D,KADtB,mBAGA,wBAAQ/D,KAAK,SAASH,UAAW,WAAa2D,EAAczD,WAAW,UAAY0D,EAAQ1D,WAAYJ,GAAG,YAClGiB,QAAS,SAACP,GAAD,OAAK4D,KADtB,qBA9CG,IAgDkB,uBACrB,wBAAQjE,KAAK,SAASH,UAAW,WAAa2D,EAAczD,WAAW,UAAY0D,EAAQ1D,WAAYJ,GAAG,aAAaiB,QAAS,SAACP,GAAD,OAAOnB,EAAMqF,yBAA7I,+BAjDG,IAkD4B,0BAO5B,sBAAK1E,UAAU,SAAf,UACH,sBAAKA,UAAW,WAAa2D,EAAczD,WAA3C,UACI,uBAAOS,QAAQ,UAAU,aAAa,8BAAtC,wBAAsF,uBACtF,uBAAQR,KAAO,OAAO,aAAa,8BAA8BL,GAAK,UAAUM,KAAK,UAC7Ea,WAAY,SAACT,GAAD,OAAK+D,EAAkB/D,EAAEU,MACrCX,SAAU,SAACM,GAAD,OAASyC,EAAiBzC,EAAMH,OAAOL,QAAQA,MAAOgD,IAExE,yBAAQjD,KAAK,cAAcN,GAAG,cAAc,aAAa,4BACjDS,SAAU,SAACM,GAAD,OAAS2C,EAAqB3C,EAAMH,OAAOL,QAD7D,UAEI,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,IAAd,kBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,oBACA,wBAAQA,MAAM,IAAd,qBAEJ,wBAAQF,KAAK,SAASL,GAAG,aAAciB,QAAS,SAACP,GAAD,OAAKwD,KAArD,2BAdJ,IAcqG,uBACjG,wBAAQ7D,KAAK,SAASL,GAAG,OAAOiB,QAAS,SAACP,GAAD,OAAKnB,EAAMmF,uBAApD,kCAGA,wBAAQrE,KAAK,SAASL,GAAG,QAAQiB,QAAS,SAACP,GAAD,OAAOnB,EAAMoF,sBAAvD,oCAlBJ,IAmBwC,0BApBrC,YAwBM,uBACT,uBAAQtE,KAAO,OAAOL,GAAK,UAAUM,KAAK,UAClC,aAAW,8BACXG,SAAU,SAACM,GAAD,OAASuC,EAAiBvC,EAAMH,OAAOL,QAAQA,MAAO8C,IACxE,wBAAQhD,KAAK,SAASL,GAAG,aAAaiB,QAAS,SAACP,GAAD,OAAKqD,KAApD,2BA5BG,IA4B6F,uBAChG,uBAAOlD,QAAQ,YAAYX,UAAW,WAAa2D,EAAczD,WAAW,UAAY0D,EAAQ1D,WAAhG,6CA7BG,IA6BiJ,uBACpJ,uBAAQC,KAAO,OAAOH,UAAW,WAAa2D,EAAczD,WAAW,UAAY0D,EAAQ1D,WAAYJ,GAAK,YAAYM,KAAK,YACrHG,SAAU,SAACM,GAAD,OAAS6C,EAAkB7C,EAAMH,OAAOL,QAClDY,WAAY,SAACT,GAAK8D,EAAiB9D,EAAEU,MACrCb,MAAOoD,IACf,wBAAQtD,KAAK,SAASH,UAAW,WAAa2D,EAAczD,WAAW,UAAY0D,EAAQ1D,WAAYJ,GAAG,YAClGiB,QAAS,SAACP,GAAD,OAAK0D,KADtB,mBAGA,wBAAQ/D,KAAK,SAASH,UAAW,WAAa2D,EAAczD,WAAW,UAAY0D,EAAQ1D,WAAYJ,GAAG,YAClGiB,QAAS,SAACP,GAAD,OAAK4D,KADtB,qBArCG,IAuCkB,uBACrB,wBAAQjE,KAAK,SAASH,UAAW,WAAa2D,EAAczD,WAAW,UAAY0D,EAAQ1D,WAAYJ,GAAG,aAAaiB,QAAS,SAACP,GAAD,OAAOnB,EAAMoF,sBAA7I,+BAxCG,IAyC4B,2B,QCzC5BE,MApHf,SAAatF,GAET,IAAIgD,GAAU,EAEd,GAAIhD,EAAMuF,QACN,OAAOvF,EAAMuF,SAAW,yCAGvB,GAAyB,QAAtBvF,EAAM6C,YACV,OAAQ,sBAAKlC,UAAU,MAAf,UACJ,sDACA,oEACA,cAAC,EAAD,CACIkC,YAAe7C,EAAM6C,YACrBO,UAAapD,EAAMoD,UACnBK,qBAAsBzD,EAAMyD,qBAC5BG,QAAS5D,EAAM4D,QACf4B,aAAcxF,EAAMwF,aACpB7B,QAAS3D,EAAM2D,QACf8B,cAAezF,EAAMyF,cACrBC,eAAkB1F,EAAM0F,eACxBhC,WAAc,sBACdV,QAAWA,IACf,cAAC,EAAD,CACIN,kBAAqB1C,EAAM0C,kBAC3B+B,oBAAuBzE,EAAMyE,oBAC7BG,gBAAmB5E,EAAM4E,gBACzBL,QAAWvE,EAAMuE,QACjBvB,QAAWA,OAMlB,GAA0B,IAAvBhD,EAAMoC,MAAMC,OAEhB,OADAW,GAAU,EACF,sBAAKrC,UAAU,MAAf,UACHX,EAAMuF,SAAW,yCAClB,sDACA,cAAC,EAAD,CACI1C,YAAe7C,EAAM6C,YACrBO,UAAapD,EAAMoD,UACnBK,qBAAsBzD,EAAMyD,qBAC5BG,QAAS5D,EAAM4D,QACf4B,aAAcxF,EAAMwF,aACpB7B,QAAS3D,EAAM2D,QACf8B,cAAezF,EAAMyF,cACrBC,eAAkB1F,EAAM0F,eACxBhC,WAAc,8CAAiB1D,EAAM2F,sBAAsBpD,KAAI,SAAAqD,GAAC,OAAGA,EAAI,WACvE5C,QAAWA,IAEf,uDAEA,cAAC,EAAD,CACIN,kBAAmB1C,EAAM0C,kBACzB+B,oBAAuBzE,EAAMyE,oBAC7BG,gBAAmB5E,EAAM4E,gBACzBS,sBAAuBrF,EAAMqF,sBAC7BD,mBAAsBpF,EAAMoF,mBAC5BD,oBAAqBnF,EAAMmF,oBAC3BL,qBAAwB9E,EAAM8E,qBAC9BE,uBAAwBhF,EAAMgF,uBAC9BW,sBAAuB3F,EAAM2F,sBAC7BpB,QAAWvE,EAAMuE,QACjBvB,QAAWA,OAOnBA,GAAU,EACV,IAAM6C,EAAY7F,EAAMoC,MAAMC,OAC9B,OAAO,sBAAK1B,UAAU,MAAf,UACFX,EAAMuF,SAAW,yCAClB,sDACA,cAAC,EAAD,CACI1C,YAAe7C,EAAM6C,YACrBO,UAAapD,EAAMoD,UACnBK,qBAAsBzD,EAAMyD,qBAC5BG,QAAS5D,EAAM4D,QACf4B,aAAcxF,EAAMwF,aACpB7B,QAAS3D,EAAM2D,QACf8B,cAAezF,EAAMyF,cACrBC,eAAkB1F,EAAM0F,eACxBhC,WAAc,iDAAoB1D,EAAM2F,sBAAsBpD,KAAI,SAAAqD,GAAC,OAAI,iCAAOA,EAAP,cACvE5C,QAAWA,IAEf,kDAAqB6C,GAAyB,KAAZA,GAAkB,aACpD,cAAC,EAAD,CAAUzE,uBAAwBpB,EAAMoB,uBAC9BgB,MAAOpC,EAAMoC,MACbwB,QAAS5D,EAAM4D,QACf4B,aAAcxF,EAAMwF,aACpBC,cAAezF,EAAMyF,cACrBrF,SAAUJ,EAAMI,SAChBsC,kBAAmB1C,EAAM0C,oBAAoB,uBACvD,cAAC,EAAD,CACIA,kBAAmB1C,EAAM0C,kBACzB+B,oBAAuBzE,EAAMyE,oBAC7BG,gBAAmB5E,EAAM4E,gBACzBS,sBAAuBrF,EAAMqF,sBAC7BD,mBAAsBpF,EAAMoF,mBAC5BD,oBAAqBnF,EAAMmF,oBAC3BL,qBAAwB9E,EAAM8E,qBAC9BE,uBAAwBhF,EAAMgF,uBAC9BT,QAAWvE,EAAMuE,QACjBoB,sBAAuB3F,EAAM2F,sBAC7B3C,QAAWA,QCxGZ8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,+BCWdQ,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAInB,IAAMC,EAAKT,IAASU,YA+QLC,MA7Qf,SAAoBlH,GAEhB,IAAMmH,EAAiBnH,EAAMmH,eAC7BlE,QAAQC,IAAIiE,GAEZ,IAAMC,EAAQJ,EAAGK,WAAWF,GAAgBG,MAAM,aAAc,iBAAkBtH,EAAMuH,KAAKC,OAC7F,EAAgCC,YAAcL,GAA9C,mBAAOpG,EAAP,KAAcuE,EAAd,KACA,GADA,KACsClF,mBAAS,QAA/C,mBAAOwC,EAAP,KAAoB6E,EAApB,KACA,EAA0DrH,mBAAS,IAAnE,mBAAOsF,EAAP,KAA8BgC,EAA9B,KACA,EAA8BtH,oBAAS,GAAvC,mBAAOkE,EAAP,KAAgBqD,EAAhB,KAEA,EAA8BvH,mBAAS,WAAvC,mBAAOsD,EAAP,KAAgBkE,EAAhB,KACA,EAAwCxH,mBAAS,eAAjD,mBAAOmF,EAAP,KAAqBsC,EAArB,KACA,EAA0CzH,mBAAS,OAAnD,mBAAOoF,EAAP,KAAsBsC,EAAtB,KAiBMC,EAXgB,SAAlBvC,EACWuB,EAAGK,WAAWF,GAAgBc,IAAIpF,GACxCwE,WAAW,SACXa,QAAQ1C,EAAa,QAGfwB,EAAGK,WAAWF,GAAgBc,IAAIpF,GACxCwE,WAAW,SACXa,QAAQ1C,EAAa,OAM9B,EAA4CiC,YAAcO,GAA1D,mBAAOG,EAAP,KAAmBC,EAAnB,KAGA,GAHA,KAGgD/H,oBAAS,IAAzD,mBAAOqC,EAAP,KAA0B2F,EAA1B,KACA,EAA8BhI,oBAAS,GAAvC,mBAAOD,EAAP,KAAiBkI,EAAjB,KACA,EAAoCjI,mBAAS,IAA7C,oBAAOkI,GAAP,MAAmBC,GAAnB,MACA,GAAgCnI,mBAAS,GAAzC,qBAAOoI,GAAP,MAAiBC,GAAjB,MAMItF,GAAY,GACZhB,GAAQ,GAYZ,SAASuG,GAAiBC,GACtB,IAAMC,EAAa7I,EAAMuH,KAAKC,MAClB,QAAToB,GACC5B,EAAGK,WAAWF,GAAgBG,MAAM,aAAc,iBAAkBtH,EAAMuH,KAAKC,OAC1EsB,MACA7C,MAAK,SAAA8C,GACFA,EAAcC,SAAQ,SAAAf,GAClBA,EAAIxH,KAAOmI,IACXjB,EAAyBM,EAAIgB,OAAOvF,YACpCkE,EAAWK,EAAIgB,OAAOvF,WAAW,KAAOmF,UAuE5D,SAASnD,GAAewD,GACpBlC,EAAGK,WAAWF,GAAgBc,IAAIiB,GAC7B7B,WAAW,SACXyB,MACA7C,MAAK,SAAA8C,GACFA,EAAcC,SAAQ,SAAAf,GAClBjB,EAAGK,WAAWF,GACTc,IAAIiB,GACJ7B,WAAW,SAChBY,IAAIA,EAAIxH,IAAI0I,eAgG5B,OApMInI,IACAoC,GAAYpC,EAAMoI,KAAK7G,KAAI,SAAC0F,GACxB,OAAO,eAAIA,EAAIgB,YAGJ,QAAhBpG,GAAyBsF,IACxB/F,GAAQ+F,EAAWiB,KAAK7G,KAAI,SAAC0F,GACzB,OAAO,eAAIA,EAAIgB,YA6LhB,8BACH,cAAC,EAAD,CAAK1D,QAASA,EACTnC,UAAWA,GACXiG,YAAejB,EACfhG,MAAOA,GACPS,YAAeA,EACfH,kBAAmBA,EACnByC,oBAAqB,kBAAIkD,GAAsB3F,IAC/C+B,oBA9JT,SAA6B6E,GACzB,IAAMC,EAAYC,cAClBxC,EAAGK,WAAWF,GAAgBc,IAAIsB,GAAWE,IAAI,CAC7CnG,QAASiG,EACThG,UAAW+F,EACX5F,WAAY,CAAC1D,EAAMuH,KAAKC,OACxBkC,MAAO1J,EAAMuH,KAAKoC,MACnBC,OAAM,SAACC,GACN5G,QAAQ4G,MAAM,2BAA4BA,MAG9CnC,EAAe6B,GACfZ,GAAiBY,IAmJZ9F,qBAhJT,SAA8BD,GAC1BP,QAAQC,IAAI,kBAAoBM,GAChCkE,EAAelE,GACfmF,GAAiBnF,IA8IZsB,qBA5ET,SAA8BgF,GAC1B9C,EAAGK,WAAWF,GAAgBc,IAAIpF,GAAakH,OAC3C,CAACrG,WAAYiC,EAAsBqE,OAAO,CAACF,MAC7CF,OAAM,SAACC,GACL5G,QAAQ4G,MAAM,2BAA4BA,MAE9ClB,GAAiB9F,IAuEZmC,uBApET,SAAgCiF,GAC5BjD,EAAGK,WAAWF,GAAgBc,IAAIpF,GAAakH,OAC3C,CAACrG,WAAYiC,EAAsBuE,QAAO,SAAAR,GAAK,OAAIA,IAAUO,OAC/DL,OAAM,SAACC,GACL5G,QAAQ4G,MAAM,2BAA4BA,MAE9ClB,GAAiB9F,IA+DZ+B,gBAzIT,SAAyB1C,EAAMC,GAC3BqG,GAAc,IACd,IAAM2B,EAAYX,cAClBd,GAAYD,GAAW,GACvBzB,EAAGK,WAAWF,GAAgBc,IAAIpF,GAC7BwE,WAAW,SACXY,IAAIkC,GAAWV,IAAI,CACpB/I,QAASyJ,EACT7J,UAAW4B,EACXtB,WAAW,EACXW,SAAUY,EACViI,YAAa3B,GACb/E,WAAYiC,EACZ+D,MAAO1J,EAAMuH,KAAKoC,MACnBC,OAAM,SAACC,GACN5G,QAAQ4G,MAAM,2BAA4BA,OA2HzCzI,uBA7DT,SAAgCiJ,EAAQC,EAAOtJ,GAC3CgG,EAAGK,WAAWF,GAAgBc,IAAIpF,GAC7BwE,WAAW,SAASY,IAAIoC,GAAQN,OADrC,eAEMO,EAAOtJ,IACX4I,OAAM,SAACC,GACL5G,QAAQ4G,MAAM,2BAA4BA,OAyDzCxE,sBAzGT,WACI,GAAGjC,GAAUf,OAAS,EAAE,CACpB,IAAIkI,EAAkB1H,EACC,QAApB0H,GACCtH,QAAQC,IAAI,KACZD,QAAQC,IAAI,uCAERqH,IAAoBnH,GAAU,GAAGE,QACf,IAAnBF,GAAUf,OACTqF,EAAe,OAGfA,EAAetE,GAAU,GAAGE,SAIhCoE,EAAetE,GAAU,GAAGE,SAEhCoC,GAAe6E,GACfvD,EAAGK,WAAWF,GAAgBc,IAAIsC,GAAiBpB,SAASS,OAAM,SAACC,GAC/D5G,QAAQ4G,MAAM,4BAA6BA,QAsF9CzE,mBAzCT,WACI,IAAMoF,EAbV,WAEI,IADA,IAAIC,EAAS,GACJC,EAAE,EAAGA,EAAGtI,GAAMC,OAAOqI,IACvBtI,GAAMsI,GAAG9J,WACR6J,EAAOE,KAAKvI,GAAMsI,GAAGhK,SAG7B,OAAO+J,EAMaG,GACpBtC,GAAY,GACZ,IAAI,IAAIoC,EAAE,EAAGA,EAAGF,EAAanI,OAAOqI,IAChC1D,EAAGK,WAAWF,GACTc,IAAIpF,GACJwE,WAAW,SACXY,IAAIuC,EAAaE,IAAIvB,SAASS,OAAM,SAACC,GACtC5G,QAAQ4G,MAAM,2BAA4BA,MAGlDvB,GAAY,IA+BP5C,eAAkBA,GAClB9B,QAxLT,SAAiBiH,GACbhD,EAAWgD,GACM,gBAAbA,GACA/C,EAAgB,YAChBC,EAAiB,QAEC,iBAAb8C,GACL/C,EAAgB,YAChBC,EAAiB,UAGjBD,EAAgB,eAChBC,EAAiB,UA6KhBpE,QAASA,EACTvD,SAAUA,EACVmI,WAAYA,GACZhE,QAAWA,EACXoB,sBAAyBA,O,0BCjRvBmF,MAXf,SAAa9K,GACT,IAAM+K,EAAa,CAAC,iBAIpB,OAHI/K,EAAMgL,YAAchL,EAAMiL,OAC1BF,EAAWJ,KAAK,mBAEb,oBAAIhK,UAAWoK,EAAWG,KAAK,KAC3BxJ,QAAS,kBAAM1B,EAAMmL,WAAWnL,EAAMiL,QAD1C,SAEFjL,EAAMiL,SCWAG,MAhBf,SAAiBpL,GACb,MAAkCK,mBAASL,EAAMqL,SAAS,GAAGxJ,KAA7D,mBAAOmJ,EAAP,KAAkBM,EAAlB,KACA,OACI,sBAAK3K,UAAU,OAAf,UACI,oBAAIA,UAAU,WAAd,SACKX,EAAMqL,SAAS9I,KAAI,SAAAgJ,GAAK,OACrB,cAAC,EAAD,CACKN,MAAOM,EAAM1J,IACbmJ,UAAWA,EACXG,WAAY,SAACF,GAAD,OAAWK,EAAaL,KAH/BM,EAAM1J,UAKvB7B,EAAMqL,SAASG,MAAK,SAACD,GAAD,OAAWA,EAAM1J,MAAQmJ,SCQ1DzE,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIRR,IAASU,YAApB,IACMwE,EAAOlF,IAASkF,OAChBC,EAAiB,IAAInF,IAASkF,KAAKE,mBAmCzC,SAASC,IACL,MAGIC,YAA8BJ,GAHlC,mBACIK,EADJ,KAEIC,EAFJ,KAEoBxG,EAFpB,KAE6BsE,EAF7B,KAKA,EAAkCxJ,mBAAS,IAA3C,mBAAO2L,EAAP,KAAkBC,EAAlB,KACA,EAAgC5L,mBAAS,IAAzC,mBAAO6L,EAAP,KAAiBC,EAAjB,KAEA,GAAIJ,EAGA,OAAO,iEACJ,GAAIxG,EACP,OAAO,iDAaX,OAAO,gCACFsE,GAAS,sDAAyBA,EAAMuC,WACzC,uBAAQtL,KAAO,OAAQL,GAAK,YAAYM,KAAK,YACrCa,WAAY,SAACT,GAZT,UAY0BA,EAAEU,KAZJ,KAAbqK,GACnBJ,EAA2BE,EAAWE,IAYlChL,SAAU,SAACM,GAAD,OAASyK,EAAazK,EAAMH,OAAOL,QAAQA,MAAOgL,IAJjE,IAI8E,uBACjF,uBAAQlL,KAAO,WAAYL,GAAK,WAAWM,KAAK,WACxCa,WAAY,SAACT,GAVT,UAUyBA,EAAEU,KAVF,KAAdmK,GACnBF,EAA2BE,EAAWE,IAUlChL,SAAU,SAACM,GAAD,OAAS2K,EAAY3K,EAAMH,OAAOL,QAAQA,MAAOkL,IAPhE,IAO4E,uBAC/E,wBAAQxK,QAAS,kBACboK,EAA2BE,EAAWE,IAD1C,mBAGA,wBAAQxK,QAAS,kBACb+J,EAAKY,gBAAgBX,IADzB,kCAMR,SAASY,IACL,MAGIC,YAAkCd,GAHtC,mBACIe,EADJ,KAEIT,EAFJ,KAEoBxG,EAFpB,KAE6BsE,EAF7B,KAKA,EAAkCxJ,mBAAS,IAA3C,mBAAO2L,EAAP,KAAkBC,EAAlB,KACA,EAAgC5L,mBAAS,IAAzC,mBAAO6L,EAAP,KAAiBC,EAAjB,KAEA,GAAIJ,EAGA,OAAO,iEACJ,GAAIxG,EACP,OAAO,iDAaX,OAAO,gCACFsE,GAAS,sDAAyBA,EAAMuC,WACzC,uBAAQtL,KAAO,OAAQL,GAAK,YAAYM,KAAK,YACrCa,WAAY,SAACT,GAbT,UAa0BA,EAAEU,KAbJ,KAAbqK,GACnBM,EAA+BR,EAAWE,IAatChL,SAAU,SAACM,GAAD,OAASyK,EAAazK,EAAMH,OAAOL,QAAQA,MAAOgL,IAJjE,IAI8E,uBACjF,uBAAQlL,KAAO,WAAYL,GAAK,WAAWM,KAAK,WACxCa,WAAY,SAACT,GAXT,UAWyBA,EAAEU,KAXF,KAAdmK,GACnBQ,EAA+BR,EAAWE,IAWtChL,SAAU,SAACM,GAAD,OAAS2K,EAAY3K,EAAMH,OAAOL,QAAQA,MAAOkL,IAPhE,IAO4E,uBAC/E,wBAAQxK,QAAS,kBACb8K,EAA+BR,EAAWE,IAD9C,4BASOO,MAxHf,SAAmBzM,GACf,MAA+B0M,YAAajB,GAA5C,mBAAOlE,EAAP,KAAahC,EAAb,KAAsBsE,EAAtB,KAMA,OAAItE,EACO,4CACAgC,GACPtE,QAAQC,IAAIqE,GACL,gCACFA,EAAKoF,aAAepF,EAAKC,MAC1B,wBAAQ1G,KAAK,SAASY,QAAS,kBAAM+J,EAAKmB,WAA1C,qBACErF,EAAKsF,eAAiB,wBAAQ/L,KAAK,SAASY,QAXtD,WACI+J,EAAKqB,YAAYC,yBAUW,0BAAkE,uBAC1F,cAAC,EAAD,2BAAgB/M,GAAhB,IAAuBuH,KAAMA,EAAMJ,eAjBxB,iCAoBR,qCACF0C,GAAS,4CAAeA,EAAMuC,WAC/B,eAAC,EAAD,WACI,cAACR,EAAD,GAAY,WACZ,cAACU,EAAD,GAAY,kBC5C5BU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BtH,M","file":"static/js/main.09093c95.chunk.js","sourcesContent":["import App from \"./App\";\nimport './Task.css';\nimport {useState} from \"react\";\n\n\n\nfunction Task(props){\n    const edit = props.editState;\n    const show = props.show;\n    const toDelete = props.toDelete;\n    const[editInput, setEditInput] = useState(props.task_name);\n\n    if(edit === 0){\n        return <div id={\"task\"+props.task_id} className={\"comp\"+props.completed.toString()+\"show\"+show.toString()}>\n            <input type=\"checkbox\" id={props.task_id}\n                   name={\"cb\"+props.task_name}\n                   aria-label={\"checkbox for \" + props.task_name}\n                   value={props.task_name}\n                   checked={props.completed && !toDelete}\n                   onChange={(e)=>props.handleTaskFieldChanged(e.target.id, \"completed\", e.target.checked)}/>\n            <label htmlFor={props.task_name} aria-label={props.task_name + \" completed: \" + props.completed.toString()}\n                   className=\"taskLabel\"> {props.task_name} </label>\n            <select name=\"priorityLvl\" id=\"priorityLvl\" value={props.priority}\n                    aria-label = \"Set priority for this task\"\n                    onChange={(event)=>props.handleConfEdit2(props.task_id,event.target.value)}>\n                <option value=\"0\"></option>\n                <option value=\"1\">!</option>\n                <option value=\"2\">!!</option>\n                <option value=\"3\">!!!</option>\n            </select>\n            <button type=\"button\" id={\"ed\"+props.task_id}\n                    aria-label=\"edit task\"\n                    onClick={(e)=>props.handleEditClick(e.target.id)} className=\"edit\">\n                edit </button>\n        </div>\n    }\n    else if(edit === 1){\n        return <div id={\"task\"+props.task_id} className={\"comp\"+props.completed.toString()+\"show\"+show.toString()}>\n            <input type=\"checkbox\" id={props.task_id}\n                   name={props.task_name}\n                   value={props.task_name}\n                   checked={props.completed}/>\n            <input  type = \"text\" id = \"newTask\" name=\"newTask\" value={editInput}\n                    onChange={(event)=>setEditInput(event.target.value)}\n                    onKeyPress={(e)=>\n                    {if(e.key ===\"Enter\")props.handleConfEdit(props.task_id,editInput)}}/>\n            <button type=\"button\" id={props.task_id} onClick={(e)=>props.handleConfEdit(e.target.id,editInput)}\n                    className=\"edit\"> confirm edit </button>\n        </div>\n    }\n\n    else{\n        return <div id={props.task_id} className={\"comp\"+props.completed.toString()+\"show\"+show.toString()}>\n            <input type=\"checkbox\" id={props.task_id}\n                   name={\"cb\"+props.task_name}\n                   value={props.task_name}\n                   checked={props.completed}/>\n            <label htmlFor={props.task_name}> {props.task_name} </label>\n        </div>\n    }\n\n}\n\n/*props.handleTaskFieldChanged(e.target.id, \"completed\", e.target.checked)*/\nexport default Task;","import Task from './Task.js'\nimport App from \"./App\";\nimport {useState} from \"react\";\nimport './TaskList.css';\n\nfunction TaskList(props){\n    const[taskToBeEdit, setTaskToBeEdit] = useState(-1);\n\n\n    function handleConfEdit(id,text){\n        setTaskToBeEdit(-1);\n        props.handleTaskFieldChanged(id,\"task_name\",text);\n    }\n\n    function handleConfEdit2(id,priorityNum){\n        props.handleTaskFieldChanged(id,\"priority\",priorityNum);\n    }\n\n\n    if (props.tasks.length === 0){\n        return <div> Nothing to do!</div>\n    }\n    else{\n        if(taskToBeEdit !== -1){\n\n            const listTasks = props.tasks.map((t) =>\n            {if (taskToBeEdit.includes(t.task_id)) {\n                return <Task className=\"task\"\n                             handleTaskFieldChanged={props.handleTaskFieldChanged}\n                             task_id={t.task_id} task_name={t.task_name} completed={t.completed} priority={t.priority}\n                             editState={1} show={props.showCompletedTask}\n                             handleConfEdit={handleConfEdit}/>;\n            }\n            else {\n                return <Task handleTaskFieldChanged={props.handleTaskFieldChanged} task_id={t.task_id}\n                             task_name={t.task_name}\n                             completed={t.completed}\n                             priority={t.priority}\n                             editState={2} show={props.showCompletedTask}/>;\n            }\n            })\n            return <div id={\"TaskList\"}> {listTasks} </div>\n        }\n\n        else{\n            const listTasks = props.tasks.map((t) =>\n                <Task handleTaskFieldChanged={props.handleTaskFieldChanged}\n                    /*handleEditClick={(taskID)=>setTaskToBeEdit(taskID)}*/\n                      task_id={t.task_id} task_name={t.task_name} completed={t.completed} priority={t.priority}\n                      editState={0} show={props.showCompletedTask} toDelete={props.toDelete}\n                      handleEditClick={(taskID)=>setTaskToBeEdit(taskID)}\n                      handleConfEdit2={handleConfEdit2}/>);\n            return <div id={\"TaskList\"}> {listTasks} </div>\n        }\n\n    }\n}\nexport default TaskList;\n\n","import App from \"./App\";\nimport {useState} from \"react\";\nimport './Top.css';\n\n\nfunction Top(props) {\n    const[taskListInput, setTaskListInput] = useState(props.currentList);\n    const showSort = !(props.initial);\n\n    console.log(\"showSort\" + showSort.toString());\n\n    const selectList = props.taskLists.map((l) => {\n        return <option value={l.list_id}> {l.list_name}</option>\n    });\n\n    function onClickSelectList(listId){\n        props.handleTaskListSelect(listId);\n        setTaskListInput(listId);\n\n    }\n\n    return <div className=\"top\">\n        <span className=\"listSelection\"\n              aria-label=\"List Selection Menu\">\n        <label htmlFor=\"listSelect\"> List:</label>\n        <select name=\"listSelect\"\n                id=\"listSelect\" value={props.currentList}\n                aria-label = \"List Selection Menu\"\n                onChange={(event) => onClickSelectList(event.target.value)}>\n            <option value={\"wow\"}> Select list </option>\n            {selectList}\n        </select>\n        </span>\n        <br/>\n        <span className=\"sharedWithText\">{props.sharedWith}</span><br/>\n        <div className={\"showSort\" + showSort.toString()}>\n            <label htmlFor=\"sortWithSelect\" aria-label = \"Sort by Menu\">Sort by:</label>\n            <select name=\"sortWithSelect\" aria-label = \"Sort by Menu\" id=\"sortWithSelect\" value={props.sortVal}\n                    onChange={(event)=>props.setSort(event.target.value)}>\n                <option value=\"default\">default</option>\n                <option value=\"priorityAsc\">Lowest to Highest priority</option>\n                <option value=\"priorityDesc\">Highest to lowest priority</option>\n            </select>\n        </div>\n\n    </div>\n}\n\nexport default Top;","import App from \"./App\";\nimport './Bottom.css';\nimport {useState} from \"react\";\n\nfunction Bottom(props){\n    const[listNameInput, setListNameInput] = useState(\"\");\n    const[taskNameInput, setTaskNameInput] = useState(\"\");\n    const[taskPriorityInput, setTaskPriorityInput] = useState(\"0\");\n    const[listShareInput, setListShareInput] = useState(\"\");\n    const showTaskStuff = !(props.initial);\n    const isOwner = props.isOwner;\n\n\n    function onCreateListClick(){\n        props.handleTaskListAdded(listNameInput);\n        setListNameInput(\"\");\n        if(listNameInput === \"\"){\n            return <p id=\"taskAddMessage\" role=\"alert\">\n                No list added due to blank entry, please try again.\n            </p>\n        }\n        else{\n            return <p id=\"taskAddMessage\" role=\"alert\">\n                List {listNameInput} successfully added!\n            </p>\n        }\n\n    }\n\n    function onCreateTaskClick(){\n        props.handleTaskAdded(taskNameInput,taskPriorityInput);\n        setTaskNameInput(\"\");\n        setTaskPriorityInput(\"0\");\n    }\n\n    function onCreateListEnter(key){\n        if (key === 'Enter') {\n            props.handleTaskListAdded(listNameInput);\n            setListNameInput(\"\");\n        }\n    }\n\n    function onShareListClick(){\n        props.handleTaskListShared(listShareInput);\n        setListShareInput(\"\");\n    }\n    function onUnShareListClick(){\n        props.handleTaskListUnShared(listShareInput);\n        setListShareInput(\"\");\n    }\n\n    function onShareListEnter(key){\n        if (key === 'Enter') {\n            props.handleTaskListShared(listShareInput);\n            setListShareInput(\"\");\n        }\n    }\n\n    function onCreateTaskEnter(key){\n        if (key === 'Enter'){\n            props.handleTaskAdded(taskNameInput,taskPriorityInput);\n            setTaskNameInput(\"\");\n            setTaskPriorityInput(\"0\");\n        }\n    }\n\n\n    if (props.showCompletedTask){\n        return <div className=\"bottom\">\n            <div className={\"showTask\" + showTaskStuff.toString()}>\n                <label htmlFor=\"newTask\"> New task:</label><br/>\n                <input  type = \"text\" id = \"newTask\" name=\"newTask\"\n                        aria-label = \"text box for new task entry\"\n                        onKeyPress={(e)=>onCreateTaskEnter(e.key)}\n                        onChange={(event)=>setTaskNameInput(event.target.value)}\n                        value={taskNameInput}/>\n\n\n                <select name=\"priorityLvl\" id=\"priorityLvl\" aria-label = \"Set priority for new task\"\n                        onChange={(event)=>setTaskPriorityInput(event.target.value)}>\n                    <option value=\"0\">Select priority</option>\n                    <option value=\"0\">None</option>\n                    <option value=\"1\">Low</option>\n                    <option value=\"2\">Medium</option>\n                    <option value=\"3\">High</option>\n                </select>\n\n                <button type=\"button\" id=\"createTask\" onClick={(e)=> onCreateTaskClick()}>\n                    Create Task\n                </button> <br/>\n\n                <button type=\"button\" id=\"hide\" onClick={(e)=>props.handleHideCompleted()} >\n                    Hide Completed Tasks\n                </button>\n\n                <button type=\"button\" id=\"clear\" onClick={(e) => props.handleTasksDeleted()} >\n                    Clear Completed Tasks\n                </button> <br/>\n            </div>\n\n            New List:<br/>\n            <input  type = \"text\" id = \"newList\" name=\"newList\"\n                    aria-label=\"Text box for new list entry\"\n                    onKeyPress={(e)=>{onCreateListEnter(e.key)}}\n                    onChange={(event)=>setListNameInput(event.target.value)} value={listNameInput}/>\n            <button type=\"button\" id=\"createList\" onClick={(e)=>onCreateListClick()}> Create List </button> <br/>\n            <label htmlFor=\"shareText\" className={\"showTask\" + showTaskStuff.toString()+\"isOwned\" + isOwner.toString()}> Share/Unshare this list with: </label> <br/>\n            <input  type = \"text\" className={\"showTask\" + showTaskStuff.toString()+\"isOwned\" + isOwner.toString()} id = \"shareText\" name=\"shareText\"\n                    onChange={(event)=>setListShareInput(event.target.value)}\n                    onKeyPress={(e)=>{onShareListEnter(e.key)}}\n                    value={listShareInput}/>\n            <button type=\"button\" className={\"showTask\" + showTaskStuff.toString()+ \"isOwned\" + isOwner.toString()} id=\"listShare\"\n                    onClick={(e)=>onShareListClick()}>\n                Share</button>\n            <button type=\"button\" className={\"showTask\" + showTaskStuff.toString()+\"isOwned\" + isOwner.toString()} id=\"listShare\"\n                    onClick={(e)=>onUnShareListClick()}>\n                Unshare</button> <br/>\n            <button type=\"button\" className={\"showTask\" + showTaskStuff.toString()+\"isOwned\" + isOwner.toString()} id=\"listDelete\" onClick={(e) => props.handleTaskListDeleted()} >\n                Delete this list </button> <br/>\n\n\n\n        </div>\n    }\n    else{\n        return <div className=\"bottom\">\n            <div className={\"showTask\" + showTaskStuff.toString()}>\n                <label htmlFor=\"newTask\" aria-label = \"text box for new task entry\"> New task:</label><br/>\n                <input  type = \"text\" aria-label = \"text box for new task entry\" id = \"newTask\" name=\"newTask\"\n                        onKeyPress={(e)=>onCreateTaskEnter(e.key)}\n                        onChange={(event)=>setTaskNameInput(event.target.value)} value={taskNameInput}/>\n\n                <select name=\"priorityLvl\" id=\"priorityLvl\" aria-label = \"Set priority for new task\"\n                        onChange={(event)=>setTaskPriorityInput(event.target.value)}>\n                    <option value=\"0\">Select priority</option>\n                    <option value=\"0\">None</option>\n                    <option value=\"1\">Low</option>\n                    <option value=\"2\">Medium</option>\n                    <option value=\"3\">High</option>\n                </select>\n                <button type=\"button\" id=\"createTask\"  onClick={(e)=>onCreateTaskClick()}> Create Task </button> <br/>\n                <button type=\"button\" id=\"show\" onClick={(e)=>props.handleHideCompleted()}>\n                    Show Completed Tasks\n                </button>\n                <button type=\"button\" id=\"clear\" onClick={(e) => props.handleTasksDeleted()} >\n                    Clear Completed Tasks </button> <br/>\n            </div>\n\n\n            New List:<br/>\n            <input  type = \"text\" id = \"newList\" name=\"newList\"\n                    aria-label=\"Text box for new list entry\"\n                    onChange={(event)=>setListNameInput(event.target.value)} value={listNameInput}/>\n            <button type=\"button\" id=\"createList\" onClick={(e)=>onCreateListClick()}> Create List </button> <br/>\n            <label htmlFor=\"shareText\" className={\"showTask\" + showTaskStuff.toString()+\"isOwned\" + isOwner.toString()}> Share/Unshare this list with: </label> <br/>\n            <input  type = \"text\" className={\"showTask\" + showTaskStuff.toString()+\"isOwned\" + isOwner.toString()} id = \"shareText\" name=\"shareText\"\n                    onChange={(event)=>setListShareInput(event.target.value)}\n                    onKeyPress={(e)=>{onShareListEnter(e.key)}}\n                    value={listShareInput}/>\n            <button type=\"button\" className={\"showTask\" + showTaskStuff.toString()+\"isOwned\" + isOwner.toString()} id=\"listShare\"\n                    onClick={(e)=>onShareListClick()}>\n                Share</button>\n            <button type=\"button\" className={\"showTask\" + showTaskStuff.toString()+\"isOwned\" + isOwner.toString()} id=\"listShare\"\n                    onClick={(e)=>onUnShareListClick()}>\n                Unshare</button> <br/>\n            <button type=\"button\" className={\"showTask\" + showTaskStuff.toString()+\"isOwned\" + isOwner.toString()} id=\"listDelete\" onClick={(e) => props.handleTasksDeleted()} >\n                Delete this list </button> <br/>\n\n\n        </div>\n    }\n\n}\n\n\nexport default Bottom;","import './App.css';\nimport {useState} from \"react\";\nimport TaskList from './TaskList.js';\nimport Top from './Top.js';\nimport Bottom from './Bottom.js';\nimport {useDocument} from \"react-firebase-hooks/firestore\";\n\n\n\nfunction App(props) {\n\n    let initial = true;\n\n    if (props.loading){\n        return(props.loading && <h1>Loading</h1>);\n    }\n\n    else if(props.currentList === \"wow\"){\n        return (<div className=\"App\">\n            <h1>List of Things to Do</h1>\n            <h5>Select a list or create a new one!</h5>\n            <Top\n                currentList = {props.currentList}\n                taskLists = {props.taskLists}\n                handleTaskListSelect={props.handleTaskListSelect}\n                setSort={props.setSort}\n                sortPriority={props.sortPriority}\n                sortVal={props.sortVal}\n                sortDirection={props.sortDirection}\n                deleteAllTasks = {props.deleteAllTasks}\n                sharedWith = {<p></p>}\n                initial = {initial}/>\n            <Bottom\n                showCompletedTask = {props.showCompletedTask}\n                handleTaskListAdded = {props.handleTaskListAdded}\n                handleTaskAdded = {props.handleTaskAdded}\n                isOwner = {props.isOwner}\n                initial = {initial}\n            />\n\n        </div>);\n    }\n\n    else if(props.tasks.length === 0){\n        initial = false;\n        return (<div className=\"App\">\n            {props.loading && <h1>Loading</h1>}\n            <h1>List of Things to Do</h1>\n            <Top\n                currentList = {props.currentList}\n                taskLists = {props.taskLists}\n                handleTaskListSelect={props.handleTaskListSelect}\n                setSort={props.setSort}\n                sortPriority={props.sortPriority}\n                sortVal={props.sortVal}\n                sortDirection={props.sortDirection}\n                deleteAllTasks = {props.deleteAllTasks}\n                sharedWith = {<p>Shared with: {props.currentListSharedWith.map(s=> s + \" ,\")}</p>}\n                initial = {initial}/>\n\n            <p>Your list has no tasks</p>\n\n            <Bottom\n                showCompletedTask={props.showCompletedTask}\n                handleTaskListAdded = {props.handleTaskListAdded}\n                handleTaskAdded = {props.handleTaskAdded}\n                handleTaskListDeleted={props.handleTaskListDeleted}\n                handleTasksDeleted = {props.handleTasksDeleted}\n                handleHideCompleted={props.handleHideCompleted}\n                handleTaskListShared = {props.handleTaskListShared}\n                handleTaskListUnShared={props.handleTaskListUnShared}\n                currentListSharedWith={props.currentListSharedWith}\n                isOwner = {props.isOwner}\n                initial = {initial}\n            />\n\n        </div>);\n    }\n\n    else{\n        initial = false;\n        const taskCount = props.tasks.length;\n        return(<div className=\"App\">\n            {props.loading && <h1>Loading</h1>}\n            <h1>List of Things to Do</h1>\n            <Top\n                currentList = {props.currentList}\n                taskLists = {props.taskLists}\n                handleTaskListSelect={props.handleTaskListSelect}\n                setSort={props.setSort}\n                sortPriority={props.sortPriority}\n                sortVal={props.sortVal}\n                sortDirection={props.sortDirection}\n                deleteAllTasks = {props.deleteAllTasks}\n                sharedWith = {<span>Shared with: {props.currentListSharedWith.map(s => <span>{s}, </span>)}</span>}\n                initial = {initial}\n            />\n            <p>Number of tasks: {taskCount + (taskCount===10 && \" (max)\") }</p>\n            <TaskList handleTaskFieldChanged={props.handleTaskFieldChanged}\n                      tasks={props.tasks} /*showCompletedTask={props.showCompletedTask}*/\n                      setSort={props.setSort}\n                      sortPriority={props.sortPriority}\n                      sortDirection={props.sortDirection}\n                      toDelete={props.toDelete}\n                      showCompletedTask={props.showCompletedTask}/><br/>\n            <Bottom\n                showCompletedTask={props.showCompletedTask}\n                handleTaskListAdded = {props.handleTaskListAdded}\n                handleTaskAdded = {props.handleTaskAdded}\n                handleTaskListDeleted={props.handleTaskListDeleted}\n                handleTasksDeleted = {props.handleTasksDeleted}\n                handleHideCompleted={props.handleHideCompleted}\n                handleTaskListShared = {props.handleTaskListShared}\n                handleTaskListUnShared={props.handleTaskListUnShared}\n                isOwner = {props.isOwner}\n                currentListSharedWith={props.currentListSharedWith}\n                initial = {initial}\n\n            />\n\n\n        </div>);\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import App from './App.js';\nimport {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCcjiZC0kvbIDUuYKiskjJDrvurCA-F2g8\",\n    authDomain: \"acowe-fbdb1.firebaseapp.com\",\n    projectId: \"acowe-fbdb1\",\n    storageBucket: \"acowe-fbdb1.appspot.com\",\n    messagingSenderId: \"258279491687\",\n    appId: \"1:258279491687:web:b339460be12ffae3222cc2\",\n    measurementId: \"G-DQR3SH9VE5\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction InCloudApp(props) {\n\n    const collectionName = props.collectionName;\n    console.log(collectionName);\n\n    const query = db.collection(collectionName).where(\"sharedWith\", \"array-contains\", props.user.email);\n    const [value, loading, error] = useCollection(query);\n    const [currentList, setCurrentList] = useState(\"wow\");\n    const [currentListSharedWith, setCurrentListSharedWith] = useState([]);\n    const [isOwner, setIsOwner] = useState(false);\n\n    const [sortVal, setSortVal] = useState(\"default\");\n    const [sortPriority, setSortPriority] = useState(\"place_order\");\n    const [sortDirection, setSortDirection] = useState(\"asc\");\n\n\n\n    let query_2a = \"\";\n\n    if (sortDirection === \"desc\"){\n        query_2a = db.collection(collectionName).doc(currentList)\n            .collection(\"Tasks\")\n            .orderBy(sortPriority,\"desc\");\n    }\n    else{\n        query_2a = db.collection(collectionName).doc(currentList)\n            .collection(\"Tasks\")\n            .orderBy(sortPriority,\"asc\");\n    }\n\n    const query_2 = query_2a;\n\n\n    const [task_value, task_loading, t_error] = useCollection(query_2);\n\n\n    const [showCompletedTask, setShowCompletedTask]=useState(true);\n    const [toDelete, setToDelete]=useState(false);\n    const [maxMessage, setMaxMessage] = useState(\"\");\n    const [orderNum, setOrderNum] = useState(0);\n\n\n\n    /*database.collection(collectionName).doc(tasks.).collection('movies').get()*/\n\n    let taskLists = [];\n    let tasks = [];\n    if (value) {\n        taskLists = value.docs.map((doc) => {\n            return {...doc.data()}});\n    }\n\n    if(currentList !== \"wow\" && task_value){\n        tasks = task_value.docs.map((doc)=>{\n            return {...doc.data()}});\n    }\n\n\n    function sharedListSelect(list){\n        const user_email = props.user.email;\n        if(list !== \"wow\"){\n            db.collection(collectionName).where(\"sharedWith\", \"array-contains\", props.user.email)\n                .get()\n                .then(querySnapshot => {\n                    querySnapshot.forEach(doc =>\n                    {if(doc.id === list){\n                        setCurrentListSharedWith(doc.data().sharedWith);\n                        setIsOwner(doc.data().sharedWith[0] === user_email);\n                    }\n                    });\n                });\n        }\n    }\n\n\n\n    function setSort(sortPref) {\n        setSortVal(sortPref);\n        if (sortPref === \"priorityAsc\"){\n            setSortPriority(\"priority\");\n            setSortDirection(\"asc\");\n        }\n        else if (sortPref === \"priorityDesc\"){\n            setSortPriority(\"priority\");\n            setSortDirection(\"desc\");\n        }\n        else{\n            setSortPriority(\"place_order\");\n            setSortDirection(\"desc\");\n        }\n\n    }\n\n    function handleTaskListAdded(listNameText) {\n        const newListId = generateUniqueID();\n        db.collection(collectionName).doc(newListId).set({\n            list_id: newListId,\n            list_name: listNameText,\n            sharedWith: [props.user.email],\n            owner: props.user.uid\n        }).catch((error) => {\n            console.error(\"Error writing document: \", error);\n        });\n\n        setCurrentList(newListId);\n        sharedListSelect(newListId);\n    }\n\n    function handleTaskListSelect(listId){\n        console.log(\"input list id: \" + listId);\n        setCurrentList(listId);\n        sharedListSelect(listId);\n    }\n\n\n\n\n\n    function handleTaskAdded(text, priorityNum){\n        setMaxMessage(\"\");\n        const newTaskId = generateUniqueID();\n        setOrderNum(orderNum + 1);\n        db.collection(collectionName).doc(currentList)\n            .collection(\"Tasks\")\n            .doc(newTaskId).set({\n            task_id: newTaskId,\n            task_name: text,\n            completed: false,\n            priority: priorityNum,\n            place_order: orderNum,\n            sharedWith: currentListSharedWith,\n            owner: props.user.uid\n        }).catch((error) => {\n            console.error(\"Error writing document: \", error);\n        })\n\n    }\n\n    function deleteAllTasks(listID){\n        db.collection(collectionName).doc(listID)\n            .collection(\"Tasks\")\n            .get()\n            .then(querySnapshot => {\n                querySnapshot.forEach(doc => {\n                    db.collection(collectionName)\n                        .doc(listID)\n                        .collection(\"Tasks\").\n                    doc(doc.id).delete()\n                });\n            });\n    }\n\n    function handleTaskListDeleted(){\n        if(taskLists.length > 0){\n            let listToBeDeleted = currentList;\n            if(listToBeDeleted === \"wow\"){\n                console.log(\"A\");\n                console.log(\"Please select a list to be deleted\");\n            }\n            else if(listToBeDeleted === taskLists[0].list_id){\n                if(taskLists.length===1){\n                    setCurrentList(\"wow\");\n                }\n                else{\n                    setCurrentList(taskLists[1].list_id);\n                }\n            }\n            else{\n                setCurrentList(taskLists[0].list_id);\n            }\n            deleteAllTasks(listToBeDeleted);\n            db.collection(collectionName).doc(listToBeDeleted).delete().catch((error) => {\n                console.error(\"Error deleting document: \", error);\n            });\n        }\n    }\n\n    function handleTaskListShared(newOwner) {\n        db.collection(collectionName).doc(currentList).update(\n            {sharedWith: currentListSharedWith.concat([newOwner])}\n        ).catch((error) => {\n            console.error(\"Error writing document: \", error);\n        });\n        sharedListSelect(currentList);\n    }\n\n    function handleTaskListUnShared(removedOwner) {\n        db.collection(collectionName).doc(currentList).update(\n            {sharedWith: currentListSharedWith.filter(owner => owner !== removedOwner)}\n        ).catch((error) => {\n            console.error(\"Error writing document: \", error);\n        });\n        sharedListSelect(currentList);\n    }\n\n    function handleTaskFieldChanged(taskId, field, value) {\n        db.collection(collectionName).doc(currentList)\n            .collection(\"Tasks\").doc(taskId).update(\n            {[field]:value}\n        ).catch((error) => {\n            console.error(\"Error writing document: \", error);\n        });\n    }\n\n\n    function getCompleted(){\n        let retArr = [];\n        for (let i=0; i< tasks.length;i++){\n            if(tasks[i].completed){\n                retArr.push(tasks[i].task_id);\n            }\n        }\n        return retArr;\n    }\n\n\n\n    function handleTasksDeleted(){\n        const completedIDs =getCompleted();\n        setToDelete(true);\n        for(let i=0; i< completedIDs.length;i++){\n            db.collection(collectionName)\n                .doc(currentList)\n                .collection(\"Tasks\")\n                .doc(completedIDs[i]).delete().catch((error) => {\n                console.error(\"Error writing document: \", error);\n            });\n        }\n        setToDelete(false);\n    }\n\n\n\n    /* print all tasks (delete all things in a subcol)*/\n    /*db.collection(collectionName).doc(currentList)\n        .collection(currentList + \"_tasks\")\n        .get()\n        .then(querySnapshot => {\n            querySnapshot.forEach(doc => {\n                console.log(doc.data().task_id);});\n        });*/\n\n\n    return <div>\n        <App loading={loading}\n             taskLists={taskLists}\n             taskLoading = {task_loading}\n             tasks={tasks}\n             currentList = {currentList}\n             showCompletedTask={showCompletedTask}\n             handleHideCompleted={()=>setShowCompletedTask(!showCompletedTask)}\n             handleTaskListAdded ={handleTaskListAdded}\n             handleTaskListSelect = {handleTaskListSelect}\n             handleTaskListShared = {handleTaskListShared}\n             handleTaskListUnShared = {handleTaskListUnShared}\n             handleTaskAdded ={handleTaskAdded}\n             handleTaskFieldChanged = {handleTaskFieldChanged}\n             handleTaskListDeleted={handleTaskListDeleted}\n             handleTasksDeleted={handleTasksDeleted}\n             deleteAllTasks = {deleteAllTasks}\n             setSort={setSort}\n             sortVal={sortVal}\n             toDelete={toDelete}\n             maxMessage={maxMessage}\n             isOwner = {isOwner}\n             currentListSharedWith = {currentListSharedWith}\n        />\n    </div>\n}\nexport default InCloudApp;","import './Tab.css';\n\nfunction Tab(props) {\n    const classNames = [\"tab-list-item\"];\n    if (props.activeTab === props.label) {\n        classNames.push(\"tab-list-active\");\n    }\n    return <li className={classNames.join(\" \")}\n               onClick={() => props.onClickTab(props.label)}>\n        {props.label}\n    </li>\n}\n\nexport default Tab;","\nimport React, {useState} from 'react';\nimport Tab from './Tab.js'\n\nfunction TabList(props) {\n    const [activeTab, setActiveTab] = useState(props.children[0].key);\n    return (\n        <div className=\"tabs\">\n            <ol className=\"tab-list\">\n                {props.children.map(child =>\n                    <Tab key={child.key}\n                         label={child.key}\n                         activeTab={activeTab}\n                         onClickTab={(label) => setActiveTab(label)}/>)}\n            </ol>\n            {props.children.find((child) => child.key === activeTab)}\n        </div>\n    );\n}\n\nexport default TabList;","import InCloudApp from \"./InCloudApp\";\nimport {useState} from \"react\";\nimport { useAuthState,\n    useCreateUserWithEmailAndPassword,\n    useSignInWithEmailAndPassword } from 'react-firebase-hooks/auth';\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport TabList from './TabList';\nimport inCloudApp from \"./InCloudApp\";\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCcjiZC0kvbIDUuYKiskjJDrvurCA-F2g8\",\n    authDomain: \"acowe-fbdb1.firebaseapp.com\",\n    projectId: \"acowe-fbdb1\",\n    storageBucket: \"acowe-fbdb1.appspot.com\",\n    messagingSenderId: \"258279491687\",\n    appId: \"1:258279491687:web:b339460be12ffae3222cc2\",\n    measurementId: \"G-DQR3SH9VE5\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\nconst collectionName = \"TaskList-SharingAllowed\"\n\nfunction UnAuthApp(props){\n    const [user, loading, error] = useAuthState(auth);\n\n    function verifyEmail() {\n        auth.currentUser.sendEmailVerification();\n    }\n\n    if (loading) {\n        return <p>Checking...</p>;\n    } else if (user) {\n        console.log(user);\n        return <div>\n            {user.displayName || user.email}\n            <button type=\"button\" onClick={() => auth.signOut()}>Logout</button>\n            {!user.emailVerified && <button type=\"button\" onClick={verifyEmail}>Verify email</button>}<br/>\n            <InCloudApp {...props} user={user} collectionName = {collectionName}/>\n        </div>\n    } else {\n        return <>\n            {error && <p>Error App: {error.message}</p>}\n            <TabList>\n                <SignIn key=\"Sign In\"/>\n                <SignUp key=\"Sign Up\"/>\n            </TabList>\n        </>\n    }\n}\n\nconst FAKE_EMAIL = 'foo@bar.com';\nconst FAKE_PASSWORD = 'xyzzyxx';\n\n\nfunction SignIn() {\n    const [\n        signInWithEmailAndPassword,\n        userCredential, loading, error\n    ] = useSignInWithEmailAndPassword(auth);\n\n    const [emailText, setEmailText] = useState(\"\");\n    const [passText, setPassText] = useState(\"\") ;\n\n    if (userCredential) {\n        // Shouldn't happen because App should see that\n        // we are signed in.\n        return <div>Unexpectedly signed in already</div>\n    } else if (loading) {\n        return <p>Logging in…</p>\n    }\n\n    function onEnterEmail (key){\n        if (key === \"Enter\" && passText !== \"\"){\n            signInWithEmailAndPassword(emailText, passText);\n        }\n    }\n    function onEnterPass (key){\n        if (key === \"Enter\" && emailText !== \"\"){\n            signInWithEmailAndPassword(emailText, passText);\n        }\n    }\n    return <div>\n        {error && <p>\"Error logging in: \" {error.message}</p>}\n        <input  type = \"text\"  id = \"emailText\" name=\"emailText\"\n                onKeyPress={(e)=>onEnterEmail(e.key)}\n                onChange={(event)=>setEmailText(event.target.value)} value={emailText}/> <br/>\n        <input  type = \"password\"  id = \"passText\" name=\"passText\"\n                onKeyPress={(e)=>onEnterPass(e.key)}\n                onChange={(event)=>setPassText(event.target.value)} value={passText}/> <br/>\n        <button onClick={() =>\n            signInWithEmailAndPassword(emailText, passText)}>Login\n        </button>\n        <button onClick={() =>\n            auth.signInWithPopup(googleProvider)}>Login with Google\n        </button>\n    </div>\n}\n\nfunction SignUp() {\n    const [\n        createUserWithEmailAndPassword,\n        userCredential, loading, error\n    ] = useCreateUserWithEmailAndPassword(auth);\n\n    const [emailText, setEmailText] = useState(\"\");\n    const [passText, setPassText] = useState(\"\") ;\n\n    if (userCredential) {\n        // Shouldn't happen because App should see that\n        // we are signed in.\n        return <div>Unexpectedly signed in already</div>\n    } else if (loading) {\n        return <p>Signing up…</p>\n    }\n    function onEnterEmail (key){\n        if (key === \"Enter\" && passText !== \"\"){\n            createUserWithEmailAndPassword(emailText, passText);\n        }\n    }\n    function onEnterPass (key){\n        if (key === \"Enter\" && emailText !== \"\"){\n            createUserWithEmailAndPassword(emailText, passText);\n        }\n    }\n\n    return <div>\n        {error && <p>\"Error signing up: \" {error.message}</p>}\n        <input  type = \"text\"  id = \"emailText\" name=\"emailText\"\n                onKeyPress={(e)=>onEnterEmail(e.key)}\n                onChange={(event)=>setEmailText(event.target.value)} value={emailText}/> <br/>\n        <input  type = \"password\"  id = \"passText\" name=\"passText\"\n                onKeyPress={(e)=>onEnterPass(e.key)}\n                onChange={(event)=>setPassText(event.target.value)} value={passText}/> <br/>\n        <button onClick={() =>\n            createUserWithEmailAndPassword(emailText, passText)}>\n            Create user\n        </button>\n\n    </div>\n}\n\n\nexport default UnAuthApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport UnAuthApp from \"./UnAuthApp\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UnAuthApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}