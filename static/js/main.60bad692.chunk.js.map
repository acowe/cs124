{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["initialData","id","name","completed","TaskList","props","data","length","listTasks","map","t","Task","type","value","htmlFor","className","Bottom","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0JAAe,I,WCETA,EAAc,CAAC,CAACC,GAAI,EAAGC,KAAK,WAAYC,WAAU,IAGxD,SAASC,EAASC,GACf,GAA0B,IAAtBA,EAAMC,KAAKC,OACX,OAAO,kDAGP,IAAMC,EAAYR,EAAYS,KAAI,SAACC,GAAD,OAC9B,cAACC,EAAD,CAAMT,KAAMQ,EAAER,KAAMC,UAAWO,EAAEP,eACrC,OAAO,qBAAKF,GAAI,WAAT,SACFO,IAKZ,SAASG,EAAKN,GACV,OAAO,sBAAKJ,GAAI,KAAKI,EAAMJ,GAApB,UACH,uBAAOW,KAAK,WAAWX,GAAI,KAAKI,EAAMJ,GAAIC,KAAMG,EAAMH,KAAMW,MAAOR,EAAMH,OACzE,wBAAOY,QAAST,EAAMH,KAAtB,cAA8BG,EAAMH,KAApC,OACA,wBAAQU,KAAK,SAASG,UAAU,OAAhC,uBAIR,SAASC,IACL,OAAO,sBAAKD,UAAU,SAAf,sBACM,uBACT,uBAAOH,KAAO,OAAOX,GAAK,UAAUC,KAAK,YACzC,wBAAQU,KAAK,SAAb,2BAHG,IAG0C,uBAC7C,wBAAQA,KAAK,SAAb,oCACA,wBAAQA,KAAK,SAAb,wCAcOK,MAVf,WACE,OACE,sBAAKF,UAAU,MAAf,UACE,sDACE,cAACX,EAAD,CAAUE,KAAMN,IAChB,cAACgB,EAAD,QC7BOE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.60bad692.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nconst initialData = [{id: 0, name:\"call mom\", completed:false}\n]\n\nfunction TaskList(props){\n   if (props.data.length === 0){\n       return <div> Nothing to do!</div>\n   }\n   else{\n       const listTasks = initialData.map((t) =>\n           <Task name={t.name} completed={t.completed}/>);\n       return <div id={\"TaskList\"}>\n           {listTasks}\n       </div>\n   }\n}\n\nfunction Task(props){\n    return <div id={\"id\"+props.id}>\n        <input type=\"checkbox\" id={\"cb\"+props.id} name={props.name} value={props.name}/>\n        <label htmlFor={props.name}> {props.name} </label>\n        <button type=\"button\" className=\"edit\"> edit </button>\n        </div>\n}\n\nfunction Bottom(){\n    return <div className=\"bottom\">\n        New task:<br/>\n        <input type = \"text\" id = \"newTask\" name=\"newTask\"/>\n        <button type=\"button\"> Create Task </button> <br/>\n        <button type=\"button\"> Hide Completed Tasks </button>\n        <button type=\"button\"> Clear Completed Tasks </button>\n    </div>\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>List of Things to Do</h1>\n        <TaskList data={initialData}/>\n        <Bottom/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}